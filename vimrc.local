" indenet the whole file
map <Leader>i mmgg=G`m<CR>

" open up our schema
map <Leader>sc :sp db/schema.rb<cr>

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" RENAME CURRENT FILE (thanks Gary Bernhardt)
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! RenameFile()
  let old_name = expand('%')
  let new_name = input('New file name: ', expand('%'), 'file')
  if new_name != '' && new_name != old_name
    exec ':saveas ' . new_name
    exec ':silent !rm ' . old_name
    redraw!
  endif
endfunction
map <Leader>n :call RenameFile()<cr>

" Display extra whitespace
set list listchars=tab:»·,trail:·

" Send specs away
let g:test#strategy = 'tslime'

" custom surrounds
autocmd FileType erb let b:surround_46 = "<% \r %>"
autocmd FileType erb let b:surround_61 = "<%= \r %>"

" pry
map <Leader>p Orequire 'pry'; binding.pry<Esc><CR>

" Vim and OS share clipboard
if exists("+clipboard")
  set clipboard=unnamed
endif

" Toggle relative and non-relative line numbers
map <Leader>r :call ToggleNumber()<cr>

function! ToggleNumber()
  if &relativenumber
    set norelativenumber
  else
    set relativenumber
  endif
endfunction

" Sets airline (status bar) to remove angle brackets and sets a theme
let g:airline_left_sep=''
let g:airline_right_sep=''
let g:airline_theme="base16"

" Highlight cursor line
set cursorline

" Never wrap
set nowrap

" remove all comments
nmap <leader>c :%s/^\s*#.*$//g<CR>:%s/\(\n\)\n\+/\1/g<CR>:nohl<CR>gg

" Color scheme
colorscheme github
highlight NonText guibg=#060606
highlight Folded  guibg=#0A0A0A guifg=#9090D0

" Default to relative line numbers
set relativenumber

" ES6 highlighting
autocmd BufRead,BufNewFile *.es6 setfiletype javascript


let g:formatdef_scalafmt = "'scalafmt --stdin'"
let g:formatters_scala = ['scalafmt']
let g:autoformat_autoindent = 0
let g:autoformat_retab = 0
let g:autoformat_remove_trailing_spaces = 0
let g:syntastic_mode_map = { 'mode': 'passive' }
let g:jsx_ext_required = 0

" Linting on all changes felt too aggressive. The below settings calls lint on
" certain events, either when I stop interacting or when entering / leaving
" insert mode
set updatetime=1000

" disable ale augroup from thoughtbot dotfiles
autocmd! ale

inoremap <silent><expr> <c-space> coc#refresh()

" Use K to show documentation in preview window
nnoremap <silent> K :call <SID>show_documentation()<CR>

function! s:show_documentation()
  if (index(['vim','help'], &filetype) >= 0)
    execute 'h '.expand('<cword>')
  else
    call CocActionAsync('doHover')
  endif
endfunction

nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gr <Plug>(coc-references)
nmap <silent> [g <Plug>(coc-diagnostic-prev)
nmap <silent> ]g <Plug>(coc-diagnostic-next)

nmap <Leader>f :Ag --nogroup --nocolor --ignore test \\b<C-R><C-W>\\b<CR>:cw<CR>
